{"version":3,"sources":["Components/Form/Form.js","Components/Result/Result.js","Components/App/App.js","index.js"],"names":["Form","props","react_default","a","createElement","Fragment","className","onSubmit","submit","htmlFor","onChange","search","value","id","type","placeholder","Result","_props$data","data","img","name","country","weather","temp","sunrise","sunset","pressure","humidity","wind","coords","error","content","tempFloor","Math","floor","sunriseTime","Date","toLocaleTimeString","sunsetTime","src","concat","alt","href","lat","lon","target","aria-label","APIkey","App","state","handleInputChange","e","preventDefault","_this","setState","handleCitySubmit","URL","length","alert","fetch","then","response","ok","Error","status","json","sys","main","coord","prevState","icon","description","speed","catch","err","console","log","prevProps","this","Components_Form_Form","Components_Result_Result","Component","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b836183f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.scss\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={props.submit}>\r\n        <label className=\"form__label\" htmlFor=\"input\">\r\n          Search Weather in Your City\r\n        </label>\r\n        <input\r\n          onChange={props.search}\r\n          value={props.value}\r\n          id=\"input\"\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Insert city name\"\r\n        />\r\n        <button className=\"form__btn\">Search</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Result.scss\";\r\n\r\nconst Result = props => {\r\n  const {\r\n    img,\r\n    name,\r\n    country,\r\n    weather,\r\n    temp,\r\n    sunrise,\r\n    sunset,\r\n    pressure,\r\n    humidity,\r\n    wind,\r\n    coords,\r\n    error\r\n  } = props.data;\r\n\r\n  let content = null;\r\n\r\n  if (!error && name) {\r\n    const tempFloor = Math.floor(temp);\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n    content = (\r\n      <>\r\n        <div className=\"icon__wrapper\">\r\n          <img\r\n            className=\"icon__img\"\r\n            src={`https://openweathermap.org/img/w/${img}.png`}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <ul className=\"weather__list\">\r\n          <li className=\"list__item list__item--bold\">\r\n            {name}, {country}\r\n            <span className=\"list__item--italic\"> {weather}</span>\r\n          </li>\r\n          <li className=\"list__item\">\r\n            <span className=\"list__item--bg\">{tempFloor} &#176;C</span>\r\n          </li>\r\n          <li className=\"list__item\">sunrise {sunriseTime}</li>\r\n          <li className=\"list__item\">sunset {sunsetTime}</li>\r\n          <li className=\"list__item\">pressure {pressure} hpa</li>\r\n          <li className=\"list__item\">humidity {humidity} %</li>\r\n          <li className=\"list__item\">wind {wind} m/s</li>\r\n          <li className=\"list__item\">\r\n            coords\r\n            <a\r\n              href={`https://openweathermap.org/weathermap?zoom=12&lat=${\r\n                coords.lat\r\n              }&lon=${coords.lon}`}\r\n              className=\"item__link\"\r\n              target=\"__blank\"\r\n              aria-label=\"Map link to city\"\r\n            >{` ${coords.lat} , ${coords.lon}`}</a>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"content__wrapper\">\r\n      {error ? (\r\n        <p className=\"error\">{`We can't find ${name} in database`}</p>\r\n      ) : (\r\n        content\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Form from \"../Form/Form\";\nimport Result from \"../Result/Result\";\n\nconst APIkey = \"f898e87d753c1e5de2cf49473bed40c5\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    img: \"\",\n    name: \"\",\n    country: \"\",\n    weather: \"\",\n    temp: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    pressure: \"\",\n    humidity: \"\",\n    wind: \"\",\n    coords: \"\",\n    error: false\n  };\n\n  handleInputChange = e => {\n    e.preventDefault();\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  handleCitySubmit = e => {\n    e.preventDefault();\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.value\n    }&units=metric&APPID=${APIkey}`;\n    if (this.state.value.length > 0) {\n      fetch(URL)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error(response.status);\n        })\n        .then(response => response.json())\n        .then(data => {\n          const { sys, weather, main, wind, coord } = data;\n          this.setState(prevState => ({\n            img: weather[0].icon,\n            name: prevState.value,\n            country: sys.country,\n            weather: weather[0].description,\n            temp: main.temp,\n            sunrise: sys.sunrise,\n            sunset: sys.sunset,\n            pressure: main.pressure,\n            humidity: main.humidity,\n            wind: wind.speed,\n            coords: coord,\n            error: false\n          }));\n        })\n        .catch(err => {\n          console.log(`${err} something goes wrong :(`);\n          this.setState(prevState => ({\n            error: true,\n            name: prevState.value\n          }));\n        });\n    } else return alert(\"Please insert city name first\");\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.value === this.state.value) {\n      this.setState({\n        value: \"\"\n      });\n    } else return;\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"container\">\n          <Form\n            submit={this.handleCitySubmit}\n            search={this.handleInputChange}\n            value={this.state.value}\n          />\n          <Result data={this.state} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}